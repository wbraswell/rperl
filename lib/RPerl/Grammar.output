Conflicts:
----------
Conflict in state 158 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 158 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 158 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 158 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 158 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 158 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 158 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 158 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 158 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 158 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 158 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 158 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 158 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 158 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 158 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 158 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 158 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 161 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 161 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 161 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 161 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 161 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 161 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 161 between rule 104 and token OP18_TERNARY resolved as shift.
Conflict in state 161 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 161 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 161 between rule 104 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 161 between rule 104 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 161 between rule 104 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 161 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 161 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 161 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 161 between rule 104 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 161 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 203 between rule 86 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 203 between rule 86 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 203 between rule 86 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 203 between rule 86 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 203 between rule 86 and token OP04_MATH_POW resolved as shift.
Conflict in state 203 between rule 86 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 203 between rule 86 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 203 between rule 86 and token OP18_TERNARY resolved as reduce.
Conflict in state 203 between rule 86 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 203 between rule 86 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 203 between rule 86 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 203 between rule 86 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 203 between rule 86 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 203 between rule 86 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 203 between rule 86 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 203 between rule 86 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 203 between rule 86 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 207 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 207 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 207 between rule 94 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 207 between rule 94 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 207 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 207 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 207 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 207 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 207 between rule 94 and token OP08_STRING_CAT resolved as shift.
Conflict in state 207 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 207 between rule 94 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 207 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 207 between rule 94 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 207 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 207 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 223 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 223 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 223 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 223 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 223 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 223 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 223 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 223 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 223 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 223 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 223 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 223 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 223 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 223 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 223 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 247 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 247 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 247 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 247 between rule 91 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 247 between rule 91 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 247 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 247 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 247 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 247 between rule 91 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 247 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 247 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 247 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 247 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 247 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 247 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 248 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 248 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 248 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 248 between rule 101 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 248 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 248 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 248 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 248 between rule 101 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 248 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 248 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 248 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 248 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 248 between rule 101 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 248 between rule 101 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 248 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 248 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 249 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 249 between rule 99 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 249 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 249 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 249 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 249 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 249 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 249 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 249 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 249 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 249 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 249 between rule 99 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 249 between rule 99 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 249 between rule 99 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 249 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 249 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 249 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 250 between rule 93 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 250 between rule 93 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 250 between rule 93 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 250 between rule 93 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 250 between rule 93 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 250 between rule 93 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 250 between rule 93 and token OP04_MATH_POW resolved as shift.
Conflict in state 250 between rule 93 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 250 between rule 93 and token OP18_TERNARY resolved as reduce.
Conflict in state 250 between rule 93 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 250 between rule 93 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 250 between rule 93 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 250 between rule 93 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 250 between rule 93 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 250 between rule 93 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 250 between rule 93 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 250 between rule 93 and token OP08_STRING_CAT resolved as shift.
Conflict in state 251 between rule 89 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 251 between rule 89 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 251 between rule 89 and token OP04_MATH_POW resolved as shift.
Conflict in state 251 between rule 89 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 251 between rule 89 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 251 between rule 89 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 251 between rule 89 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 251 between rule 89 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 251 between rule 89 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 251 between rule 89 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 251 between rule 89 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 251 between rule 89 and token OP18_TERNARY resolved as reduce.
Conflict in state 251 between rule 89 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 251 between rule 89 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 251 between rule 89 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 251 between rule 89 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 251 between rule 89 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 252 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 252 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 252 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 252 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 252 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 252 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 252 between rule 98 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 252 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 252 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 252 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 252 between rule 98 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 252 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 252 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 252 between rule 98 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 252 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 252 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 252 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 253 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 253 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 253 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 253 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 253 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 253 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 253 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 253 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 253 between rule 100 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 253 between rule 100 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 253 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 253 between rule 100 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 253 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 253 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 253 between rule 100 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 253 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 253 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 254 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 254 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 254 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 254 between rule 106 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 254 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 254 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 254 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 254 between rule 106 and token OP18_TERNARY resolved as shift.
Conflict in state 254 between rule 106 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 254 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 254 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 254 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 254 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 254 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 254 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 254 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 254 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 255 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 255 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 255 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 255 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 255 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 255 between rule 92 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 255 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 255 between rule 92 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 255 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 255 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 255 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 255 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 255 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 255 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 255 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 255 between rule 92 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 255 between rule 92 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 256 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 256 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 256 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 256 between rule 97 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 256 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 256 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 256 between rule 97 and token OP08_STRING_CAT resolved as shift.
Conflict in state 256 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 256 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 256 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 256 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 256 between rule 97 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 256 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 256 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 256 between rule 97 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 257 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 257 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 257 between rule 102 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 257 between rule 102 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 257 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 257 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 257 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 257 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 257 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 257 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 257 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 257 between rule 102 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 257 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 257 between rule 102 and token OP17_LIST_RANGE resolved as error.
Conflict in state 257 between rule 102 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 257 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 257 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 258 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 258 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 258 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 258 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 258 between rule 85 and token OP04_MATH_POW resolved as shift.
Conflict in state 258 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 258 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 258 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 258 between rule 85 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 258 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 258 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 258 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 258 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 258 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 258 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 259 between rule 105 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 259 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 259 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 259 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 259 between rule 105 and token OP18_TERNARY resolved as shift.
Conflict in state 259 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 259 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 259 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 259 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 259 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 259 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 259 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 259 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 259 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 259 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 259 between rule 105 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 259 between rule 105 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 263 between rule 90 and token OP04_MATH_POW resolved as shift.
Conflict in state 263 between rule 90 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 263 between rule 90 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 263 between rule 90 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 263 between rule 90 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 263 between rule 90 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 263 between rule 90 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 263 between rule 90 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 263 between rule 90 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 263 between rule 90 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 263 between rule 90 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 263 between rule 90 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 263 between rule 90 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 263 between rule 90 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 263 between rule 90 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 263 between rule 90 and token OP18_TERNARY resolved as reduce.
Conflict in state 263 between rule 90 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 265 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 265 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 265 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 265 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 265 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 265 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 265 between rule 96 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 265 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 265 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 265 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 265 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 265 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 265 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 265 between rule 96 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 265 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 265 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 265 between rule 96 and token OP08_STRING_CAT resolved as shift.
Conflict in state 392 between rule 81 and token OP08_STRING_CAT resolved as shift.
Conflict in state 392 between rule 81 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 392 between rule 81 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 392 between rule 81 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 392 between rule 81 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 392 between rule 81 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 392 between rule 81 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 392 between rule 81 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 392 between rule 81 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 392 between rule 81 and token OP18_TERNARY resolved as shift.
Conflict in state 392 between rule 81 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 392 between rule 81 and token OP04_MATH_POW resolved as shift.
Conflict in state 392 between rule 81 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 392 between rule 81 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 392 between rule 81 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 392 between rule 81 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 392 between rule 81 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 401 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 401 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 401 between rule 102 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 401 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 401 between rule 102 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 401 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 401 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 401 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 401 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 401 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 401 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 401 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 401 between rule 102 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 401 between rule 102 and token OP17_LIST_RANGE resolved as error.
Conflict in state 401 between rule 102 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 401 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 401 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped OP01_QW PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	STAR-17 -> STAR-17 Operation
45:	STAR-17 -> /* empty */
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	STAR-23 -> STAR-23 MethodOrSubroutine
58:	STAR-23 -> /* empty */
59:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'
60:	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped
61:	STAR-25 -> STAR-25 PAREN-24
62:	STAR-25 -> /* empty */
63:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'
64:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
65:	OPTIONAL-26 -> MethodArguments
66:	OPTIONAL-26 -> /* empty */
67:	STAR-27 -> STAR-27 Operation
68:	STAR-27 -> /* empty */
69:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 STAR-27 '}' ';'
70:	PAREN-28 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
71:	STAR-29 -> STAR-29 PAREN-28
72:	STAR-29 -> /* empty */
73:	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'
74:	MethodOrSubroutine -> Method
75:	MethodOrSubroutine -> Subroutine
76:	Operation -> Expression ';'
77:	Operation -> Statement
78:	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'
79:	Operator -> OP01_NAMED SubExpression
80:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
81:	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
82:	Operator -> OP01_CLOSE FHREF_SYMBOL
83:	Operator -> OP03_MATH_INC_DEC Variable
84:	Operator -> Variable OP03_MATH_INC_DEC
85:	Operator -> SubExpression OP04_MATH_POW SubExpression
86:	Operator -> OP05_LOGICAL_NEG SubExpression
87:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
88:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
89:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
90:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
91:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
92:	Operator -> SubExpression OP08_STRING_CAT SubExpression
93:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
94:	Operator -> OP10_NAMED_UNARY SubExpression
95:	Operator -> OP10_NAMED_UNARY
96:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
97:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
98:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
99:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
100:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
101:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
102:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
103:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
104:	Operator -> OP22_LOGICAL_NEG SubExpression
105:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
106:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
107:	PAREN-30 -> STDOUT_STDERR
108:	OPTIONAL-31 -> PAREN-30
109:	OPTIONAL-31 -> /* empty */
110:	OPTIONAL-32 -> ListElements
111:	OPTIONAL-32 -> /* empty */
112:	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';'
113:	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';'
114:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
115:	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-32 ')' ';'
116:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
117:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
118:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
119:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
120:	OPTIONAL-33 -> ListElements
121:	OPTIONAL-33 -> /* empty */
122:	OPTIONAL-34 -> ListElements
123:	OPTIONAL-34 -> /* empty */
124:	Expression -> Operator
125:	Expression -> WordScoped LPAREN OPTIONAL-33 ')'
126:	Expression -> WORD_UPPERCASE LPAREN ')'
127:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-34 ')'
128:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')'
129:	SubExpression -> Expression
130:	SubExpression -> 'undef'
131:	SubExpression -> Literal
132:	SubExpression -> Variable
133:	SubExpression -> ArrayReference
134:	SubExpression -> ArrayDereference
135:	SubExpression -> HashReference
136:	SubExpression -> HashDereference
137:	SubExpression -> LPAREN SubExpression ')'
138:	SubExpressionOrStdin -> SubExpression
139:	SubExpressionOrStdin -> STDIN
140:	PAREN-35 -> LoopLabel COLON
141:	OPTIONAL-36 -> PAREN-35
142:	OPTIONAL-36 -> /* empty */
143:	Statement -> Conditional
144:	Statement -> OPTIONAL-36 Loop
145:	Statement -> OperatorVoid
146:	Statement -> VariableDeclaration
147:	Statement -> VariableModification
148:	PAREN-37 -> 'elsif' LPAREN SubExpression ')' CodeBlock
149:	STAR-38 -> STAR-38 PAREN-37
150:	STAR-38 -> /* empty */
151:	PAREN-39 -> 'else' CodeBlock
152:	OPTIONAL-40 -> PAREN-39
153:	OPTIONAL-40 -> /* empty */
154:	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-38 OPTIONAL-40
155:	Loop -> LoopFor
156:	Loop -> LoopForEach
157:	Loop -> LoopWhile
158:	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
159:	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
160:	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock
161:	PLUS-41 -> PLUS-41 Operation
162:	PLUS-41 -> Operation
163:	CodeBlock -> LBRACE PLUS-41 '}'
164:	STAR-42 -> STAR-42 VariableRetrieval
165:	STAR-42 -> /* empty */
166:	Variable -> VARIABLE_SYMBOL STAR-42
167:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
168:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
169:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
170:	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';'
171:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
172:	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';'
173:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
174:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
175:	PAREN-43 -> OP21_LIST_COMMA ListElement
176:	STAR-44 -> STAR-44 PAREN-43
177:	STAR-44 -> /* empty */
178:	ListElements -> ListElement STAR-44
179:	PLUS-45 -> PLUS-45 WORD
180:	PLUS-45 -> WORD
181:	ListElement -> SubExpression
182:	ListElement -> TypeInner SubExpression
183:	ListElement -> OP01_QW PLUS-45 ')'
184:	OPTIONAL-46 -> ListElements
185:	OPTIONAL-46 -> /* empty */
186:	ArrayReference -> LBRACKET OPTIONAL-46 ']'
187:	OPTIONAL-47 -> TypeInner
188:	OPTIONAL-47 -> /* empty */
189:	ArrayDereference -> '@{' Variable '}'
190:	ArrayDereference -> '@{' OPTIONAL-47 ArrayReference '}'
191:	OPTIONAL-48 -> TypeInner
192:	OPTIONAL-48 -> /* empty */
193:	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-48 SubExpression
194:	HashEntry -> HashDereference
195:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
196:	HashEntryTyped -> HashDereference
197:	PAREN-49 -> OP21_LIST_COMMA HashEntry
198:	STAR-50 -> STAR-50 PAREN-49
199:	STAR-50 -> /* empty */
200:	HashReference -> LBRACE HashEntry STAR-50 '}'
201:	HashReference -> LBRACE '}'
202:	OPTIONAL-51 -> TypeInner
203:	OPTIONAL-51 -> /* empty */
204:	HashDereference -> '%{' Variable '}'
205:	HashDereference -> '%{' OPTIONAL-51 HashReference '}'
206:	WordScoped -> WORD
207:	WordScoped -> WORD_SCOPED
208:	LoopLabel -> WORD_UPPERCASE
209:	Type -> WORD
210:	Type -> TYPE_INTEGER
211:	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
212:	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
213:	VariableOrLiteral -> Variable
214:	VariableOrLiteral -> Literal
215:	VariableOrLiteralOrWord -> Variable
216:	VariableOrLiteralOrWord -> Literal
217:	VariableOrLiteralOrWord -> WORD
218:	Literal -> LITERAL_NUMBER
219:	Literal -> LITERAL_STRING

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 8
	SHEBANG	shift, and go to state 3

	'package'	reduce using rule 20 (OPTIONAL-9)

	Program	go to state 4
	PAREN-1	go to state 5
	PLUS-2	go to state 7
	ModuleHeader	go to state 6
	CompileUnit	go to state 9
	Critic	go to state 1
	OPTIONAL-9	go to state 2

State 1:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 2:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 10

State 3:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 8

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	OPTIONAL-3	go to state 11
	Critic	go to state 12

State 4:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 5:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 6:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 15

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	STAR-10	go to state 14
	Package	go to state 13
	Class	go to state 16
	Module	go to state 17

State 7:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 8

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	OPTIONAL-9	go to state 2
	Critic	go to state 1
	ModuleHeader	go to state 6
	PAREN-1	go to state 18

State 8:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 20

	PLUS-14	go to state 19

State 9:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 21

State 10:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 22

State 11:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 25

	Header	go to state 26

State 12:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 13:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 14:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 8

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	Critic	go to state 28
	STAR-11	go to state 27

State 15:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 29

State 16:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 17:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 18:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 19:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 31
	WORD	shift, and go to state 30

State 20:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 21:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 22:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 32

State 23:

	WordScoped -> WORD .	(Rule 206)

	$default	reduce using rule 206 (WordScoped)

State 24:

	WordScoped -> WORD_SCOPED .	(Rule 207)

	$default	reduce using rule 207 (WordScoped)

State 25:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 33

State 26:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 34

State 27:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 37

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	Include	go to state 36
	STAR-12	go to state 35

State 28:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 29:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	')'	shift, and go to state 38

State 30:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 31:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 32:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 25

	Header	go to state 39

State 33:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 40

State 34:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 8

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for'	reduce using rule 11 (STAR-5)
	'foreach'	reduce using rule 11 (STAR-5)
	'if'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while'	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	MY	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_LPAREN	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	Critic	go to state 41
	STAR-5	go to state 42

State 35:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 43
	'use constant'	shift, and go to state 45

	Constant	go to state 46
	Subroutine	go to state 47
	PLUS-13	go to state 44

State 36:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 37:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped OP01_QW PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 48

State 38:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	';'	shift, and go to state 49

State 39:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 40:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 50

State 41:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 42:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 37

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for'	reduce using rule 13 (STAR-6)
	'foreach'	reduce using rule 13 (STAR-6)
	'if'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while'	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	MY	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_LPAREN	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	Include	go to state 52
	STAR-6	go to state 51

State 43:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 '}' ';'	(Rule 46)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53

	Type	go to state 55

State 44:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 43
	LITERAL_NUMBER	shift, and go to state 57

	Subroutine	go to state 56

State 45:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	WORD_UPPERCASE	shift, and go to state 58

State 46:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 47:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 48:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . OP01_QW PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 60
	OP01_QW	shift, and go to state 59

State 49:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 37

	Include	go to state 61

State 50:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 62

State 51:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 45

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for'	reduce using rule 15 (STAR-7)
	'foreach'	reduce using rule 15 (STAR-7)
	'if'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while'	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	MY	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_LPAREN	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	Constant	go to state 64
	STAR-7	go to state 63

State 52:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 53:

	Type -> WORD .	(Rule 209)

	$default	reduce using rule 209 (Type)

State 54:

	Type -> TYPE_INTEGER .	(Rule 210)

	$default	reduce using rule 210 (Type)

State 55:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 65

State 56:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 57:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 66

State 58:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 67

State 59:

	Include -> 'use' WordScoped OP01_QW . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 68

	PLUS-15	go to state 69

State 60:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 61:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 70

State 62:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 63:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'if'	shift, and go to state 78
	'our'	shift, and go to state 43
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 109
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 74
	OP01_NAMED_VOID_LPAREN	shift, and go to state 76
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP19_LOOP_CONTROL	shift, and go to state 94
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 90

	'for'	reduce using rule 142 (OPTIONAL-36)
	'foreach'	reduce using rule 142 (OPTIONAL-36)
	'while'	reduce using rule 142 (OPTIONAL-36)

	LoopLabel	go to state 81
	Operator	go to state 80
	Subroutine	go to state 101
	HashReference	go to state 82
	HashDereference	go to state 105
	SubExpression	go to state 106
	Literal	go to state 104
	Statement	go to state 103
	Variable	go to state 85
	Conditional	go to state 84
	Operation	go to state 112
	VariableModification	go to state 83
	WordScoped	go to state 110
	PAREN-35	go to state 115
	VariableDeclaration	go to state 86
	OperatorVoid	go to state 114
	Expression	go to state 93
	PLUS-8	go to state 95
	OPTIONAL-36	go to state 71
	ArrayDereference	go to state 98
	ArrayReference	go to state 100

State 64:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 65:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 STAR-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 118

State 66:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 67:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 41)

	MY	shift, and go to state 120

	TypeInnerConstant	go to state 119

State 68:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 69:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped OP01_QW PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 122
	WORD	shift, and go to state 121

State 70:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'## no critic qw('	shift, and go to state 8

	'our hashref $properties'	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	STAR-21	go to state 124
	Critic	go to state 123

State 71:

	Statement -> OPTIONAL-36 . Loop	(Rule 144)

	'for'	shift, and go to state 131
	'foreach'	shift, and go to state 127
	'while'	shift, and go to state 125

	LoopFor	go to state 130
	Loop	go to state 126
	LoopForEach	go to state 128
	LoopWhile	go to state 129

State 72:

	Variable -> VARIABLE_SYMBOL . STAR-42	(Rule 166)

	$default	reduce using rule 165 (STAR-42)

	STAR-42	go to state 132

State 73:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 87)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	HashDereference	go to state 105
	SubExpression	go to state 134
	Literal	go to state 104
	HashReference	go to state 82
	Operator	go to state 80
	Expression	go to state 133
	ArrayReference	go to state 100
	WordScoped	go to state 110
	Variable	go to state 137
	ArrayDereference	go to state 98

State 74:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 116)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Expression	go to state 133
	ListElement	go to state 143
	Operator	go to state 80
	HashReference	go to state 82
	SubExpression	go to state 140
	Literal	go to state 104
	HashDereference	go to state 105
	TypeInner	go to state 141
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	ArrayReference	go to state 100
	ListElements	go to state 142

State 75:

	ArrayReference -> LBRACKET . OPTIONAL-46 ']'	(Rule 186)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	']'	reduce using rule 185 (OPTIONAL-46)

	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137
	ListElements	go to state 144
	ArrayReference	go to state 100
	Operator	go to state 80
	Expression	go to state 133
	ListElement	go to state 143
	OPTIONAL-46	go to state 145
	TypeInner	go to state 141
	SubExpression	go to state 140
	HashDereference	go to state 105
	Literal	go to state 104
	HashReference	go to state 82

State 76:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN . OPTIONAL-32 ')' ';'	(Rule 115)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	')'	reduce using rule 111 (OPTIONAL-32)

	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137
	ListElements	go to state 146
	ArrayReference	go to state 100
	Operator	go to state 80
	ListElement	go to state 143
	Expression	go to state 133
	OPTIONAL-32	go to state 147
	TypeInner	go to state 141
	Literal	go to state 104
	SubExpression	go to state 140
	HashDereference	go to state 105
	HashReference	go to state 82

State 77:

	Literal -> LITERAL_STRING .	(Rule 219)

	$default	reduce using rule 219 (Literal)

State 78:

	Conditional -> 'if' . LPAREN SubExpression ')' CodeBlock STAR-38 OPTIONAL-40	(Rule 154)

	LPAREN	shift, and go to state 148

State 79:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 114)

	$default	reduce using rule 114 (OperatorVoid)

State 80:

	Expression -> Operator .	(Rule 124)

	$default	reduce using rule 124 (Expression)

State 81:

	PAREN-35 -> LoopLabel . COLON	(Rule 140)

	COLON	shift, and go to state 149

State 82:

	SubExpression -> HashReference .	(Rule 135)

	$default	reduce using rule 135 (SubExpression)

State 83:

	Statement -> VariableModification .	(Rule 147)

	$default	reduce using rule 147 (Statement)

State 84:

	Statement -> Conditional .	(Rule 143)

	$default	reduce using rule 143 (Statement)

State 85:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 84)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-34 ')'	(Rule 127)
	SubExpression -> Variable .	(Rule 132)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 173)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 174)

	OP02_METHOD_THINARROW	shift, and go to state 153
	OP03_MATH_INC_DEC	shift, and go to state 150
	OP19_VARIABLE_ASSIGN	shift, and go to state 152
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 151

	OP04_MATH_POW	reduce using rule 132 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 132 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 132 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 132 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 132 (SubExpression)
	OP08_STRING_CAT	reduce using rule 132 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 132 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 132 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 132 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 132 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 132 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 132 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 132 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 132 (SubExpression)
	OP18_TERNARY	reduce using rule 132 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 132 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 132 (SubExpression)

State 86:

	Statement -> VariableDeclaration .	(Rule 146)

	$default	reduce using rule 146 (Statement)

State 87:

	HashDereference -> '%{' . Variable '}'	(Rule 204)
	HashDereference -> '%{' . OPTIONAL-51 HashReference '}'	(Rule 205)

	MY	shift, and go to state 139
	VARIABLE_SYMBOL	shift, and go to state 72

	LBRACE	reduce using rule 203 (OPTIONAL-51)

	TypeInner	go to state 154
	OPTIONAL-51	go to state 155
	Variable	go to state 156

State 88:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 118)

	$default	reduce using rule 118 (OperatorVoid)

State 89:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 117)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	ArrayReference	go to state 100
	WordScoped	go to state 110
	Variable	go to state 137
	ArrayDereference	go to state 98
	SubExpression	go to state 158
	Literal	go to state 104
	HashDereference	go to state 105
	TypeInner	go to state 141
	HashReference	go to state 82
	Operator	go to state 80
	ListElement	go to state 157
	Expression	go to state 133

State 90:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 126)
	LoopLabel -> WORD_UPPERCASE .	(Rule 208)

	LPAREN	shift, and go to state 159

	COLON	reduce using rule 208 (LoopLabel)

State 91:

	Operator -> OP01_CLOSE . FHREF_SYMBOL	(Rule 82)

	FHREF_SYMBOL	shift, and go to state 160

State 92:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 104)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	ArrayDereference	go to state 98
	Variable	go to state 137
	WordScoped	go to state 110
	ArrayReference	go to state 100
	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	SubExpression	go to state 161
	Literal	go to state 104
	HashDereference	go to state 105

State 93:

	Operation -> Expression . ';'	(Rule 76)
	SubExpression -> Expression .	(Rule 129)

	';'	shift, and go to state 162

	OP04_MATH_POW	reduce using rule 129 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 129 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 129 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 129 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 129 (SubExpression)
	OP08_STRING_CAT	reduce using rule 129 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 129 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 129 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 129 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 129 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 129 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 129 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 129 (SubExpression)
	OP18_TERNARY	reduce using rule 129 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 129 (SubExpression)

State 94:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 119)

	WORD_UPPERCASE	shift, and go to state 164

	LoopLabel	go to state 163

State 95:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'if'	shift, and go to state 78
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 109
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 74
	OP01_NAMED_VOID_LPAREN	shift, and go to state 76
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP19_LOOP_CONTROL	shift, and go to state 94
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 90

	$end	reduce using rule 18 (Program)
	'for'	reduce using rule 142 (OPTIONAL-36)
	'foreach'	reduce using rule 142 (OPTIONAL-36)
	'while'	reduce using rule 142 (OPTIONAL-36)

	Expression	go to state 93
	OPTIONAL-36	go to state 71
	ArrayDereference	go to state 98
	ArrayReference	go to state 100
	Operator	go to state 80
	LoopLabel	go to state 81
	Statement	go to state 103
	SubExpression	go to state 106
	HashDereference	go to state 105
	Literal	go to state 104
	HashReference	go to state 82
	WordScoped	go to state 110
	Operation	go to state 165
	VariableModification	go to state 83
	Conditional	go to state 84
	Variable	go to state 85
	OperatorVoid	go to state 114
	VariableDeclaration	go to state 86
	PAREN-35	go to state 115

State 96:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 83)

	VARIABLE_SYMBOL	shift, and go to state 72

	Variable	go to state 166

State 97:

	OperatorVoid -> OP01_PRINT . OPTIONAL-31 ListElements ';'	(Rule 112)
	OperatorVoid -> OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ';'	(Rule 113)

	FHREF_SYMBOL_BRACES	shift, and go to state 170
	STDOUT_STDERR	shift, and go to state 168

	'%{'	reduce using rule 109 (OPTIONAL-31)
	'@{'	reduce using rule 109 (OPTIONAL-31)
	'undef'	reduce using rule 109 (OPTIONAL-31)
	LBRACE	reduce using rule 109 (OPTIONAL-31)
	LBRACKET	reduce using rule 109 (OPTIONAL-31)
	LITERAL_NUMBER	reduce using rule 109 (OPTIONAL-31)
	LITERAL_STRING	reduce using rule 109 (OPTIONAL-31)
	LPAREN	reduce using rule 109 (OPTIONAL-31)
	MY	reduce using rule 109 (OPTIONAL-31)
	OP01_CLOSE	reduce using rule 109 (OPTIONAL-31)
	OP01_NAMED	reduce using rule 109 (OPTIONAL-31)
	OP01_OPEN	reduce using rule 109 (OPTIONAL-31)
	OP01_QW	reduce using rule 109 (OPTIONAL-31)
	OP03_MATH_INC_DEC	reduce using rule 109 (OPTIONAL-31)
	OP05_LOGICAL_NEG	reduce using rule 109 (OPTIONAL-31)
	OP05_MATH_NEG_LPAREN	reduce using rule 109 (OPTIONAL-31)
	OP10_NAMED_UNARY	reduce using rule 109 (OPTIONAL-31)
	OP22_LOGICAL_NEG	reduce using rule 109 (OPTIONAL-31)
	VARIABLE_SYMBOL	reduce using rule 109 (OPTIONAL-31)
	WORD	reduce using rule 109 (OPTIONAL-31)
	WORD_SCOPED	reduce using rule 109 (OPTIONAL-31)
	WORD_UPPERCASE	reduce using rule 109 (OPTIONAL-31)

	OPTIONAL-31	go to state 169
	PAREN-30	go to state 167

State 98:

	SubExpression -> ArrayDereference .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 99:

	Literal -> LITERAL_NUMBER .	(Rule 218)

	$default	reduce using rule 218 (Literal)

State 100:

	SubExpression -> ArrayReference .	(Rule 133)

	$default	reduce using rule 133 (SubExpression)

State 101:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 102:

	ArrayDereference -> '@{' . Variable '}'	(Rule 189)
	ArrayDereference -> '@{' . OPTIONAL-47 ArrayReference '}'	(Rule 190)

	MY	shift, and go to state 139
	VARIABLE_SYMBOL	shift, and go to state 72

	LBRACKET	reduce using rule 188 (OPTIONAL-47)

	Variable	go to state 173
	OPTIONAL-47	go to state 171
	TypeInner	go to state 172

State 103:

	Operation -> Statement .	(Rule 77)

	$default	reduce using rule 77 (Operation)

State 104:

	SubExpression -> Literal .	(Rule 131)

	$default	reduce using rule 131 (SubExpression)

State 105:

	SubExpression -> HashDereference .	(Rule 136)

	$default	reduce using rule 136 (SubExpression)

State 106:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

State 107:

	HashReference -> LBRACE . HashEntry STAR-50 '}'	(Rule 200)
	HashReference -> LBRACE . '}'	(Rule 201)

	'%{'	shift, and go to state 87
	'}'	shift, and go to state 197
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 194

	Literal	go to state 192
	HashDereference	go to state 193
	HashEntry	go to state 195
	VariableOrLiteralOrWord	go to state 191
	Variable	go to state 196

State 108:

	Operator -> OP01_OPEN . MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	MY	shift, and go to state 198

State 109:

	VariableDeclaration -> MY . Type VARIABLE_SYMBOL ';'	(Rule 170)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 171)
	VariableDeclaration -> MY . TYPE_FHREF FHREF_SYMBOL ';'	(Rule 172)

	TYPE_FHREF	shift, and go to state 200
	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53

	Type	go to state 199

State 110:

	Expression -> WordScoped . LPAREN OPTIONAL-33 ')'	(Rule 125)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW ')'	(Rule 128)

	LPAREN	shift, and go to state 201
	OP02_METHOD_THINARROW_NEW	shift, and go to state 202

State 111:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 86)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	SubExpression	go to state 203
	HashDereference	go to state 105
	Literal	go to state 104
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	ArrayReference	go to state 100

State 112:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 113:

	Operator -> LPAREN . OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'	(Rule 78)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 80)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 137)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 204
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 205
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	ArrayDereference	go to state 98
	Variable	go to state 137
	WordScoped	go to state 110
	ArrayReference	go to state 100
	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	Literal	go to state 104
	SubExpression	go to state 206
	HashDereference	go to state 105

State 114:

	Statement -> OperatorVoid .	(Rule 145)

	$default	reduce using rule 145 (Statement)

State 115:

	OPTIONAL-36 -> PAREN-35 .	(Rule 141)

	$default	reduce using rule 141 (OPTIONAL-36)

State 116:

	SubExpression -> 'undef' .	(Rule 130)

	$default	reduce using rule 130 (SubExpression)

State 117:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 94)
	Operator -> OP10_NAMED_UNARY .	(Rule 95)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP04_MATH_POW	reduce using rule 95 (Operator)
	OP06_REGEX_MATCH	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP07_STRING_REPEAT	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

	ArrayReference	go to state 100
	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137
	HashDereference	go to state 105
	SubExpression	go to state 207
	Literal	go to state 104
	HashReference	go to state 82
	Operator	go to state 80
	Expression	go to state 133

State 118:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 STAR-17 '}' ';'	(Rule 46)

	LPAREN_MY	shift, and go to state 209

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for'	reduce using rule 43 (OPTIONAL-16)
	'foreach'	reduce using rule 43 (OPTIONAL-16)
	'if'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while'	reduce using rule 43 (OPTIONAL-16)
	'}'	reduce using rule 43 (OPTIONAL-16)
	LBRACE	reduce using rule 43 (OPTIONAL-16)
	LBRACKET	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	LPAREN	reduce using rule 43 (OPTIONAL-16)
	MY	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG_LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)
	WORD_UPPERCASE	reduce using rule 43 (OPTIONAL-16)

	OPTIONAL-16	go to state 210
	SubroutineArguments	go to state 208

State 119:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77

	Literal	go to state 211

State 120:

	TypeInnerConstant -> MY . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 212)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53

	Type	go to state 212

State 121:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 122:

	Include -> 'use' WordScoped OP01_QW PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 213

State 123:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 124:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 37

	'our hashref $properties'	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	Include	go to state 214
	STAR-22	go to state 215

State 125:

	LoopWhile -> 'while' . LPAREN SubExpression ')' CodeBlock	(Rule 160)

	LPAREN	shift, and go to state 216

State 126:

	Statement -> OPTIONAL-36 Loop .	(Rule 144)

	$default	reduce using rule 144 (Statement)

State 127:

	LoopForEach -> 'foreach' . MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 159)

	MY	shift, and go to state 217

State 128:

	Loop -> LoopForEach .	(Rule 156)

	$default	reduce using rule 156 (Loop)

State 129:

	Loop -> LoopWhile .	(Rule 157)

	$default	reduce using rule 157 (Loop)

State 130:

	Loop -> LoopFor .	(Rule 155)

	$default	reduce using rule 155 (Loop)

State 131:

	LoopFor -> 'for' . MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 158)

	MY	shift, and go to state 218

State 132:

	STAR-42 -> STAR-42 . VariableRetrieval	(Rule 164)
	Variable -> VARIABLE_SYMBOL STAR-42 .	(Rule 166)

	OP02_ARRAY_THINARROW	shift, and go to state 221
	OP02_HASH_THINARROW	shift, and go to state 219

	')'	reduce using rule 166 (Variable)
	';'	reduce using rule 166 (Variable)
	']'	reduce using rule 166 (Variable)
	'}'	reduce using rule 166 (Variable)
	COLON	reduce using rule 166 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 166 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 166 (Variable)
	OP04_MATH_POW	reduce using rule 166 (Variable)
	OP06_REGEX_MATCH	reduce using rule 166 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 166 (Variable)
	OP07_STRING_REPEAT	reduce using rule 166 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 166 (Variable)
	OP08_STRING_CAT	reduce using rule 166 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 166 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 166 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 166 (Variable)
	OP13_BITWISE_AND	reduce using rule 166 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 166 (Variable)
	OP15_LOGICAL_AND	reduce using rule 166 (Variable)
	OP16_LOGICAL_OR	reduce using rule 166 (Variable)
	OP17_LIST_RANGE	reduce using rule 166 (Variable)
	OP18_TERNARY	reduce using rule 166 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 166 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 166 (Variable)
	OP20_HASH_FATARROW	reduce using rule 166 (Variable)
	OP21_LIST_COMMA	reduce using rule 166 (Variable)
	OP23_LOGICAL_AND	reduce using rule 166 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 166 (Variable)

	VariableRetrieval	go to state 220

State 133:

	SubExpression -> Expression .	(Rule 129)

	$default	reduce using rule 129 (SubExpression)

State 134:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	')'	shift, and go to state 222
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

State 135:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	ArrayReference	go to state 100
	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	Literal	go to state 104
	SubExpression	go to state 223
	HashDereference	go to state 105

State 136:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 126)

	LPAREN	shift, and go to state 159

State 137:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 84)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-34 ')'	(Rule 127)
	SubExpression -> Variable .	(Rule 132)

	OP02_METHOD_THINARROW	shift, and go to state 153
	OP03_MATH_INC_DEC	shift, and go to state 150

	')'	reduce using rule 132 (SubExpression)
	';'	reduce using rule 132 (SubExpression)
	']'	reduce using rule 132 (SubExpression)
	'}'	reduce using rule 132 (SubExpression)
	OP04_MATH_POW	reduce using rule 132 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 132 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 132 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 132 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 132 (SubExpression)
	OP08_STRING_CAT	reduce using rule 132 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 132 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 132 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 132 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 132 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 132 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 132 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 132 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 132 (SubExpression)
	OP18_TERNARY	reduce using rule 132 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 132 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 132 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 132 (SubExpression)

State 138:

	ListElement -> OP01_QW . PLUS-45 ')'	(Rule 183)

	WORD	shift, and go to state 224

	PLUS-45	go to state 225

State 139:

	TypeInner -> MY . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53

	Type	go to state 226

State 140:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> SubExpression .	(Rule 181)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

	')'	reduce using rule 181 (ListElement)
	';'	reduce using rule 181 (ListElement)
	']'	reduce using rule 181 (ListElement)
	OP21_LIST_COMMA	reduce using rule 181 (ListElement)

State 141:

	ListElement -> TypeInner . SubExpression	(Rule 182)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Operator	go to state 80
	Expression	go to state 133
	SubExpression	go to state 227
	Literal	go to state 104
	HashDereference	go to state 105
	HashReference	go to state 82
	WordScoped	go to state 110
	Variable	go to state 137
	ArrayDereference	go to state 98
	ArrayReference	go to state 100

State 142:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 116)

	';'	shift, and go to state 228

State 143:

	ListElements -> ListElement . STAR-44	(Rule 178)

	$default	reduce using rule 177 (STAR-44)

	STAR-44	go to state 229

State 144:

	OPTIONAL-46 -> ListElements .	(Rule 184)

	$default	reduce using rule 184 (OPTIONAL-46)

State 145:

	ArrayReference -> LBRACKET OPTIONAL-46 . ']'	(Rule 186)

	']'	shift, and go to state 230

State 146:

	OPTIONAL-32 -> ListElements .	(Rule 110)

	$default	reduce using rule 110 (OPTIONAL-32)

State 147:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-32 . ')' ';'	(Rule 115)

	')'	shift, and go to state 231

State 148:

	Conditional -> 'if' LPAREN . SubExpression ')' CodeBlock STAR-38 OPTIONAL-40	(Rule 154)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	WordScoped	go to state 110
	Variable	go to state 137
	ArrayDereference	go to state 98
	ArrayReference	go to state 100
	Operator	go to state 80
	Expression	go to state 133
	Literal	go to state 104
	HashDereference	go to state 105
	SubExpression	go to state 232
	HashReference	go to state 82

State 149:

	PAREN-35 -> LoopLabel COLON .	(Rule 140)

	$default	reduce using rule 140 (PAREN-35)

State 150:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 151:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 174)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	ArrayReference	go to state 100
	WordScoped	go to state 110
	Variable	go to state 137
	ArrayDereference	go to state 98
	SubExpression	go to state 233
	HashDereference	go to state 105
	Literal	go to state 104
	HashReference	go to state 82
	Operator	go to state 80
	Expression	go to state 133

State 152:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 173)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	STDIN	shift, and go to state 234
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Expression	go to state 133
	Operator	go to state 80
	SubExpressionOrStdin	go to state 235
	HashReference	go to state 82
	Literal	go to state 104
	SubExpression	go to state 236
	HashDereference	go to state 105
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	ArrayReference	go to state 100

State 153:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-34 ')'	(Rule 127)

	LPAREN	shift, and go to state 237

State 154:

	OPTIONAL-51 -> TypeInner .	(Rule 202)

	$default	reduce using rule 202 (OPTIONAL-51)

State 155:

	HashDereference -> '%{' OPTIONAL-51 . HashReference '}'	(Rule 205)

	LBRACE	shift, and go to state 107

	HashReference	go to state 238

State 156:

	HashDereference -> '%{' Variable . '}'	(Rule 204)

	'}'	shift, and go to state 239

State 157:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 117)

	OP21_LIST_COMMA	shift, and go to state 240

State 158:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> SubExpression .	(Rule 181)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 181 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 159:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 126)

	')'	shift, and go to state 241

State 160:

	Operator -> OP01_CLOSE FHREF_SYMBOL .	(Rule 82)

	$default	reduce using rule 82 (Operator)

State 161:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 162:

	Operation -> Expression ';' .	(Rule 76)

	$default	reduce using rule 76 (Operation)

State 163:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 119)

	';'	shift, and go to state 242

State 164:

	LoopLabel -> WORD_UPPERCASE .	(Rule 208)

	$default	reduce using rule 208 (LoopLabel)

State 165:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 166:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 83)

	$default	reduce using rule 83 (Operator)

State 167:

	OPTIONAL-31 -> PAREN-30 .	(Rule 108)

	$default	reduce using rule 108 (OPTIONAL-31)

State 168:

	PAREN-30 -> STDOUT_STDERR .	(Rule 107)

	$default	reduce using rule 107 (PAREN-30)

State 169:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 . ListElements ';'	(Rule 112)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137
	ListElements	go to state 243
	ArrayReference	go to state 100
	Operator	go to state 80
	ListElement	go to state 143
	Expression	go to state 133
	TypeInner	go to state 141
	Literal	go to state 104
	SubExpression	go to state 140
	HashDereference	go to state 105
	HashReference	go to state 82

State 170:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ';'	(Rule 113)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	HashReference	go to state 82
	Literal	go to state 104
	SubExpression	go to state 140
	HashDereference	go to state 105
	TypeInner	go to state 141
	Expression	go to state 133
	ListElement	go to state 143
	Operator	go to state 80
	ArrayReference	go to state 100
	ListElements	go to state 244
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110

State 171:

	ArrayDereference -> '@{' OPTIONAL-47 . ArrayReference '}'	(Rule 190)

	LBRACKET	shift, and go to state 75

	ArrayReference	go to state 245

State 172:

	OPTIONAL-47 -> TypeInner .	(Rule 187)

	$default	reduce using rule 187 (OPTIONAL-47)

State 173:

	ArrayDereference -> '@{' Variable . '}'	(Rule 189)

	'}'	shift, and go to state 246

State 174:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 91)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	ArrayReference	go to state 100
	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137
	SubExpression	go to state 247
	HashDereference	go to state 105
	Literal	go to state 104
	HashReference	go to state 82
	Operator	go to state 80
	Expression	go to state 133

State 175:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 101)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	ArrayReference	go to state 100
	WordScoped	go to state 110
	Variable	go to state 137
	ArrayDereference	go to state 98
	HashDereference	go to state 105
	Literal	go to state 104
	SubExpression	go to state 248
	HashReference	go to state 82
	Operator	go to state 80
	Expression	go to state 133

State 176:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 99)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	ArrayReference	go to state 100
	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	HashDereference	go to state 105
	Literal	go to state 104
	SubExpression	go to state 249

State 177:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 93)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	SubExpression	go to state 250
	Literal	go to state 104
	HashDereference	go to state 105
	HashReference	go to state 82
	Operator	go to state 80
	Expression	go to state 133
	ArrayReference	go to state 100
	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137

State 178:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 89)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	Literal	go to state 104
	SubExpression	go to state 251
	HashDereference	go to state 105
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	ArrayReference	go to state 100

State 179:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 98)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	HashReference	go to state 82
	Literal	go to state 104
	SubExpression	go to state 252
	HashDereference	go to state 105
	Expression	go to state 133
	Operator	go to state 80
	ArrayReference	go to state 100
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110

State 180:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 100)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	HashDereference	go to state 105
	SubExpression	go to state 253
	Literal	go to state 104
	HashReference	go to state 82
	Operator	go to state 80
	Expression	go to state 133
	ArrayReference	go to state 100
	WordScoped	go to state 110
	Variable	go to state 137
	ArrayDereference	go to state 98

State 181:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 106)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	WordScoped	go to state 110
	Variable	go to state 137
	ArrayDereference	go to state 98
	ArrayReference	go to state 100
	Operator	go to state 80
	Expression	go to state 133
	Literal	go to state 104
	SubExpression	go to state 254
	HashDereference	go to state 105
	HashReference	go to state 82

State 182:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 92)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	HashReference	go to state 82
	SubExpression	go to state 255
	HashDereference	go to state 105
	Literal	go to state 104
	Expression	go to state 133
	Operator	go to state 80
	ArrayReference	go to state 100
	ArrayDereference	go to state 98
	Variable	go to state 137
	WordScoped	go to state 110

State 183:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 97)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Operator	go to state 80
	Expression	go to state 133
	Literal	go to state 104
	SubExpression	go to state 256
	HashDereference	go to state 105
	HashReference	go to state 82
	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137
	ArrayReference	go to state 100

State 184:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 102)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137
	ArrayReference	go to state 100
	Operator	go to state 80
	Expression	go to state 133
	Literal	go to state 104
	HashDereference	go to state 105
	SubExpression	go to state 257
	HashReference	go to state 82

State 185:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 85)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	HashDereference	go to state 105
	SubExpression	go to state 258
	Literal	go to state 104
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	ArrayReference	go to state 100

State 186:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 105)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Literal	go to state 104
	SubExpression	go to state 259
	HashDereference	go to state 105
	HashReference	go to state 82
	Operator	go to state 80
	Expression	go to state 133
	ArrayReference	go to state 100
	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137

State 187:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 103)

	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	VARIABLE_SYMBOL	shift, and go to state 72

	VariableOrLiteral	go to state 262
	Variable	go to state 261
	Literal	go to state 260

State 188:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 90)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	ArrayReference	go to state 100
	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	HashDereference	go to state 105
	Literal	go to state 104
	SubExpression	go to state 263

State 189:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 88)

	OP06_REGEX_PATTERN	shift, and go to state 264

State 190:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 96)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	ArrayReference	go to state 100
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	HashReference	go to state 82
	Literal	go to state 104
	HashDereference	go to state 105
	SubExpression	go to state 265
	Expression	go to state 133
	Operator	go to state 80

State 191:

	HashEntry -> VariableOrLiteralOrWord . OP20_HASH_FATARROW OPTIONAL-48 SubExpression	(Rule 193)

	OP20_HASH_FATARROW	shift, and go to state 266

State 192:

	VariableOrLiteralOrWord -> Literal .	(Rule 216)

	$default	reduce using rule 216 (VariableOrLiteralOrWord)

State 193:

	HashEntry -> HashDereference .	(Rule 194)

	$default	reduce using rule 194 (HashEntry)

State 194:

	VariableOrLiteralOrWord -> WORD .	(Rule 217)

	$default	reduce using rule 217 (VariableOrLiteralOrWord)

State 195:

	HashReference -> LBRACE HashEntry . STAR-50 '}'	(Rule 200)

	$default	reduce using rule 199 (STAR-50)

	STAR-50	go to state 267

State 196:

	VariableOrLiteralOrWord -> Variable .	(Rule 215)

	$default	reduce using rule 215 (VariableOrLiteralOrWord)

State 197:

	HashReference -> LBRACE '}' .	(Rule 201)

	$default	reduce using rule 201 (HashReference)

State 198:

	Operator -> OP01_OPEN MY . TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	TYPE_FHREF	shift, and go to state 268

State 199:

	VariableDeclaration -> MY Type . VARIABLE_SYMBOL ';'	(Rule 170)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 171)

	VARIABLE_SYMBOL	shift, and go to state 269

State 200:

	VariableDeclaration -> MY TYPE_FHREF . FHREF_SYMBOL ';'	(Rule 172)

	FHREF_SYMBOL	shift, and go to state 270

State 201:

	Expression -> WordScoped LPAREN . OPTIONAL-33 ')'	(Rule 125)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	')'	reduce using rule 121 (OPTIONAL-33)

	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137
	ListElements	go to state 271
	ArrayReference	go to state 100
	Operator	go to state 80
	ListElement	go to state 143
	Expression	go to state 133
	TypeInner	go to state 141
	Literal	go to state 104
	HashDereference	go to state 105
	SubExpression	go to state 140
	OPTIONAL-33	go to state 272
	HashReference	go to state 82

State 202:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . ')'	(Rule 128)

	')'	shift, and go to state 273

State 203:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 86)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185

	')'	reduce using rule 86 (Operator)
	';'	reduce using rule 86 (Operator)
	']'	reduce using rule 86 (Operator)
	'}'	reduce using rule 86 (Operator)
	OP06_REGEX_MATCH	reduce using rule 86 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 86 (Operator)
	OP07_STRING_REPEAT	reduce using rule 86 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 86 (Operator)
	OP08_STRING_CAT	reduce using rule 86 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 86 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 86 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 86 (Operator)
	OP13_BITWISE_AND	reduce using rule 86 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 86 (Operator)
	OP15_LOGICAL_AND	reduce using rule 86 (Operator)
	OP16_LOGICAL_OR	reduce using rule 86 (Operator)
	OP17_LIST_RANGE	reduce using rule 86 (Operator)
	OP18_TERNARY	reduce using rule 86 (Operator)
	OP21_LIST_COMMA	reduce using rule 86 (Operator)
	OP23_LOGICAL_AND	reduce using rule 86 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 86 (Operator)

State 204:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 80)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	TypeInner	go to state 141
	Literal	go to state 104
	SubExpression	go to state 158
	HashDereference	go to state 105
	HashReference	go to state 82
	Operator	go to state 80
	ListElement	go to state 274
	Expression	go to state 133
	ArrayReference	go to state 100
	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137

State 205:

	Operator -> LPAREN OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ')'	(Rule 78)

	FHREF_SYMBOL_BRACES	shift, and go to state 275

State 206:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 137)

	')'	shift, and go to state 276
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

State 207:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 94)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 208:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 209:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53

	Type	go to state 277

State 210:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . STAR-17 '}' ';'	(Rule 46)

	$default	reduce using rule 45 (STAR-17)

	STAR-17	go to state 278

State 211:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 41)

	';'	shift, and go to state 279

State 212:

	TypeInnerConstant -> MY Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 212)

	'$TYPED_'	shift, and go to state 280

State 213:

	Include -> 'use' WordScoped OP01_QW PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 214:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 215:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'our hashref $properties'	shift, and go to state 282
	'use constant'	shift, and go to state 45

	Properties	go to state 283
	Constant	go to state 281

State 216:

	LoopWhile -> 'while' LPAREN . SubExpression ')' CodeBlock	(Rule 160)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	ArrayReference	go to state 100
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	HashReference	go to state 82
	SubExpression	go to state 284
	Literal	go to state 104
	HashDereference	go to state 105
	Expression	go to state 133
	Operator	go to state 80

State 217:

	LoopForEach -> 'foreach' MY . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 159)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53

	Type	go to state 285

State 218:

	LoopFor -> 'for' MY . TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 158)

	TYPE_INTEGER	shift, and go to state 286

State 219:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 168)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 169)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 288
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	HashReference	go to state 82
	HashDereference	go to state 105
	Literal	go to state 104
	SubExpression	go to state 287
	Expression	go to state 133
	Operator	go to state 80
	ArrayReference	go to state 100
	ArrayDereference	go to state 98
	Variable	go to state 137
	WordScoped	go to state 110

State 220:

	STAR-42 -> STAR-42 VariableRetrieval .	(Rule 164)

	$default	reduce using rule 164 (STAR-42)

State 221:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 167)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	ArrayReference	go to state 100
	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	HashDereference	go to state 105
	SubExpression	go to state 289
	Literal	go to state 104

State 222:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 87)

	$default	reduce using rule 87 (Operator)

State 223:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	']'	reduce using rule 79 (Operator)
	'}'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 79 (Operator)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 224:

	PLUS-45 -> WORD .	(Rule 180)

	$default	reduce using rule 180 (PLUS-45)

State 225:

	PLUS-45 -> PLUS-45 . WORD	(Rule 179)
	ListElement -> OP01_QW PLUS-45 . ')'	(Rule 183)

	')'	shift, and go to state 290
	WORD	shift, and go to state 291

State 226:

	TypeInner -> MY Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	'$TYPED_'	shift, and go to state 292

State 227:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> TypeInner SubExpression .	(Rule 182)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

	')'	reduce using rule 182 (ListElement)
	';'	reduce using rule 182 (ListElement)
	']'	reduce using rule 182 (ListElement)
	OP21_LIST_COMMA	reduce using rule 182 (ListElement)

State 228:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 116)

	$default	reduce using rule 116 (OperatorVoid)

State 229:

	STAR-44 -> STAR-44 . PAREN-43	(Rule 176)
	ListElements -> ListElement STAR-44 .	(Rule 178)

	OP21_LIST_COMMA	shift, and go to state 293

	')'	reduce using rule 178 (ListElements)
	';'	reduce using rule 178 (ListElements)
	']'	reduce using rule 178 (ListElements)

	PAREN-43	go to state 294

State 230:

	ArrayReference -> LBRACKET OPTIONAL-46 ']' .	(Rule 186)

	$default	reduce using rule 186 (ArrayReference)

State 231:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-32 ')' . ';'	(Rule 115)

	';'	shift, and go to state 295

State 232:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	Conditional -> 'if' LPAREN SubExpression . ')' CodeBlock STAR-38 OPTIONAL-40	(Rule 154)

	')'	shift, and go to state 296
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

State 233:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 174)

	';'	shift, and go to state 297
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

State 234:

	SubExpressionOrStdin -> STDIN .	(Rule 139)

	$default	reduce using rule 139 (SubExpressionOrStdin)

State 235:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 173)

	';'	shift, and go to state 298

State 236:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	SubExpressionOrStdin -> SubExpression .	(Rule 138)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

	';'	reduce using rule 138 (SubExpressionOrStdin)

State 237:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-34 ')'	(Rule 127)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	')'	reduce using rule 123 (OPTIONAL-34)

	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	ArrayReference	go to state 100
	OPTIONAL-34	go to state 299
	ListElements	go to state 300
	ListElement	go to state 143
	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	HashDereference	go to state 105
	Literal	go to state 104
	SubExpression	go to state 140
	TypeInner	go to state 141

State 238:

	HashDereference -> '%{' OPTIONAL-51 HashReference . '}'	(Rule 205)

	'}'	shift, and go to state 301

State 239:

	HashDereference -> '%{' Variable '}' .	(Rule 204)

	$default	reduce using rule 204 (HashDereference)

State 240:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 117)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	ArrayReference	go to state 100
	ListElements	go to state 302
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	HashReference	go to state 82
	HashDereference	go to state 105
	Literal	go to state 104
	SubExpression	go to state 140
	TypeInner	go to state 141
	Expression	go to state 133
	ListElement	go to state 143
	Operator	go to state 80

State 241:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 126)

	$default	reduce using rule 126 (Expression)

State 242:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 119)

	$default	reduce using rule 119 (OperatorVoid)

State 243:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements . ';'	(Rule 112)

	';'	shift, and go to state 303

State 244:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ';'	(Rule 113)

	';'	shift, and go to state 304

State 245:

	ArrayDereference -> '@{' OPTIONAL-47 ArrayReference . '}'	(Rule 190)

	'}'	shift, and go to state 305

State 246:

	ArrayDereference -> '@{' Variable '}' .	(Rule 189)

	$default	reduce using rule 189 (ArrayDereference)

State 247:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 248:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 249:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 250:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182

	')'	reduce using rule 93 (Operator)
	';'	reduce using rule 93 (Operator)
	']'	reduce using rule 93 (Operator)
	'}'	reduce using rule 93 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 93 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 93 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 93 (Operator)
	OP13_BITWISE_AND	reduce using rule 93 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 93 (Operator)
	OP15_LOGICAL_AND	reduce using rule 93 (Operator)
	OP16_LOGICAL_OR	reduce using rule 93 (Operator)
	OP17_LIST_RANGE	reduce using rule 93 (Operator)
	OP18_TERNARY	reduce using rule 93 (Operator)
	OP21_LIST_COMMA	reduce using rule 93 (Operator)
	OP23_LOGICAL_AND	reduce using rule 93 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 93 (Operator)

State 251:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189

	')'	reduce using rule 89 (Operator)
	';'	reduce using rule 89 (Operator)
	']'	reduce using rule 89 (Operator)
	'}'	reduce using rule 89 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 89 (Operator)
	OP07_STRING_REPEAT	reduce using rule 89 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 89 (Operator)
	OP08_STRING_CAT	reduce using rule 89 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 89 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 89 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 89 (Operator)
	OP13_BITWISE_AND	reduce using rule 89 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 89 (Operator)
	OP15_LOGICAL_AND	reduce using rule 89 (Operator)
	OP16_LOGICAL_OR	reduce using rule 89 (Operator)
	OP17_LIST_RANGE	reduce using rule 89 (Operator)
	OP18_TERNARY	reduce using rule 89 (Operator)
	OP21_LIST_COMMA	reduce using rule 89 (Operator)
	OP23_LOGICAL_AND	reduce using rule 89 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 89 (Operator)

State 252:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 253:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 254:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 255:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174

	')'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 256:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 257:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 258:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP07_STRING_REPEAT	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 259:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 260:

	VariableOrLiteral -> Literal .	(Rule 214)

	$default	reduce using rule 214 (VariableOrLiteral)

State 261:

	VariableOrLiteral -> Variable .	(Rule 213)

	$default	reduce using rule 213 (VariableOrLiteral)

State 262:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 103)

	COLON	shift, and go to state 306

State 263:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_STRING_REPEAT	shift, and go to state 178

	')'	reduce using rule 90 (Operator)
	';'	reduce using rule 90 (Operator)
	']'	reduce using rule 90 (Operator)
	'}'	reduce using rule 90 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 90 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 90 (Operator)
	OP08_STRING_CAT	reduce using rule 90 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 90 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 90 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 90 (Operator)
	OP13_BITWISE_AND	reduce using rule 90 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 90 (Operator)
	OP15_LOGICAL_AND	reduce using rule 90 (Operator)
	OP16_LOGICAL_OR	reduce using rule 90 (Operator)
	OP17_LIST_RANGE	reduce using rule 90 (Operator)
	OP18_TERNARY	reduce using rule 90 (Operator)
	OP21_LIST_COMMA	reduce using rule 90 (Operator)
	OP23_LOGICAL_AND	reduce using rule 90 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 90 (Operator)

State 264:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 265:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 266:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW . OPTIONAL-48 SubExpression	(Rule 193)

	MY	shift, and go to state 139

	'%{'	reduce using rule 192 (OPTIONAL-48)
	'@{'	reduce using rule 192 (OPTIONAL-48)
	'undef'	reduce using rule 192 (OPTIONAL-48)
	LBRACE	reduce using rule 192 (OPTIONAL-48)
	LBRACKET	reduce using rule 192 (OPTIONAL-48)
	LITERAL_NUMBER	reduce using rule 192 (OPTIONAL-48)
	LITERAL_STRING	reduce using rule 192 (OPTIONAL-48)
	LPAREN	reduce using rule 192 (OPTIONAL-48)
	OP01_CLOSE	reduce using rule 192 (OPTIONAL-48)
	OP01_NAMED	reduce using rule 192 (OPTIONAL-48)
	OP01_OPEN	reduce using rule 192 (OPTIONAL-48)
	OP03_MATH_INC_DEC	reduce using rule 192 (OPTIONAL-48)
	OP05_LOGICAL_NEG	reduce using rule 192 (OPTIONAL-48)
	OP05_MATH_NEG_LPAREN	reduce using rule 192 (OPTIONAL-48)
	OP10_NAMED_UNARY	reduce using rule 192 (OPTIONAL-48)
	OP22_LOGICAL_NEG	reduce using rule 192 (OPTIONAL-48)
	VARIABLE_SYMBOL	reduce using rule 192 (OPTIONAL-48)
	WORD	reduce using rule 192 (OPTIONAL-48)
	WORD_SCOPED	reduce using rule 192 (OPTIONAL-48)
	WORD_UPPERCASE	reduce using rule 192 (OPTIONAL-48)

	OPTIONAL-48	go to state 308
	TypeInner	go to state 307

State 267:

	STAR-50 -> STAR-50 . PAREN-49	(Rule 198)
	HashReference -> LBRACE HashEntry STAR-50 . '}'	(Rule 200)

	'}'	shift, and go to state 310
	OP21_LIST_COMMA	shift, and go to state 309

	PAREN-49	go to state 311

State 268:

	Operator -> OP01_OPEN MY TYPE_FHREF . FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	FHREF_SYMBOL	shift, and go to state 312

State 269:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL . ';'	(Rule 170)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 171)

	';'	shift, and go to state 313
	OP19_VARIABLE_ASSIGN	shift, and go to state 314

State 270:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL . ';'	(Rule 172)

	';'	shift, and go to state 315

State 271:

	OPTIONAL-33 -> ListElements .	(Rule 120)

	$default	reduce using rule 120 (OPTIONAL-33)

State 272:

	Expression -> WordScoped LPAREN OPTIONAL-33 . ')'	(Rule 125)

	')'	shift, and go to state 316

State 273:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')' .	(Rule 128)

	$default	reduce using rule 128 (Expression)

State 274:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 80)

	OP21_LIST_COMMA	shift, and go to state 317

State 275:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ')'	(Rule 78)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	ArrayReference	go to state 100
	ListElements	go to state 318
	ArrayDereference	go to state 98
	Variable	go to state 137
	WordScoped	go to state 110
	HashReference	go to state 82
	TypeInner	go to state 141
	HashDereference	go to state 105
	Literal	go to state 104
	SubExpression	go to state 140
	Expression	go to state 133
	ListElement	go to state 143
	Operator	go to state 80

State 276:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 137)

	$default	reduce using rule 137 (SubExpression)

State 277:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 319

State 278:

	STAR-17 -> STAR-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'if'	shift, and go to state 78
	'undef'	shift, and go to state 116
	'}'	shift, and go to state 321
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 109
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 74
	OP01_NAMED_VOID_LPAREN	shift, and go to state 76
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP19_LOOP_CONTROL	shift, and go to state 94
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 90

	'for'	reduce using rule 142 (OPTIONAL-36)
	'foreach'	reduce using rule 142 (OPTIONAL-36)
	'while'	reduce using rule 142 (OPTIONAL-36)

	Statement	go to state 103
	Literal	go to state 104
	HashDereference	go to state 105
	SubExpression	go to state 106
	HashReference	go to state 82
	Operator	go to state 80
	LoopLabel	go to state 81
	OperatorVoid	go to state 114
	VariableDeclaration	go to state 86
	PAREN-35	go to state 115
	WordScoped	go to state 110
	Operation	go to state 320
	VariableModification	go to state 83
	Conditional	go to state 84
	Variable	go to state 85
	OPTIONAL-36	go to state 71
	Expression	go to state 93
	ArrayReference	go to state 100
	ArrayDereference	go to state 98

State 279:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 280:

	TypeInnerConstant -> MY Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 212)

	WORD_UPPERCASE	shift, and go to state 322

State 281:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 282:

	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 64)

	OP19_VARIABLE_ASSIGN	shift, and go to state 323

State 283:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 58 (STAR-23)

	STAR-23	go to state 324

State 284:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopWhile -> 'while' LPAREN SubExpression . ')' CodeBlock	(Rule 160)

	')'	shift, and go to state 325
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

State 285:

	LoopForEach -> 'foreach' MY Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 159)

	VARIABLE_SYMBOL	shift, and go to state 326

State 286:

	LoopFor -> 'for' MY TYPE_INTEGER . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 158)

	VARIABLE_SYMBOL	shift, and go to state 327

State 287:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 168)

	'}'	shift, and go to state 328
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

State 288:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 169)
	WordScoped -> WORD .	(Rule 206)

	'}'	shift, and go to state 329

	LPAREN	reduce using rule 206 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 206 (WordScoped)

State 289:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 167)

	']'	shift, and go to state 330
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

State 290:

	ListElement -> OP01_QW PLUS-45 ')' .	(Rule 183)

	$default	reduce using rule 183 (ListElement)

State 291:

	PLUS-45 -> PLUS-45 WORD .	(Rule 179)

	$default	reduce using rule 179 (PLUS-45)

State 292:

	TypeInner -> MY Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	WORD	shift, and go to state 331

State 293:

	PAREN-43 -> OP21_LIST_COMMA . ListElement	(Rule 175)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	TypeInner	go to state 141
	HashDereference	go to state 105
	Literal	go to state 104
	SubExpression	go to state 140
	HashReference	go to state 82
	Operator	go to state 80
	Expression	go to state 133
	ListElement	go to state 332
	ArrayReference	go to state 100
	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137

State 294:

	STAR-44 -> STAR-44 PAREN-43 .	(Rule 176)

	$default	reduce using rule 176 (STAR-44)

State 295:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-32 ')' ';' .	(Rule 115)

	$default	reduce using rule 115 (OperatorVoid)

State 296:

	Conditional -> 'if' LPAREN SubExpression ')' . CodeBlock STAR-38 OPTIONAL-40	(Rule 154)

	LBRACE	shift, and go to state 334

	CodeBlock	go to state 333

State 297:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 174)

	$default	reduce using rule 174 (VariableModification)

State 298:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 173)

	$default	reduce using rule 173 (VariableModification)

State 299:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-34 . ')'	(Rule 127)

	')'	shift, and go to state 335

State 300:

	OPTIONAL-34 -> ListElements .	(Rule 122)

	$default	reduce using rule 122 (OPTIONAL-34)

State 301:

	HashDereference -> '%{' OPTIONAL-51 HashReference '}' .	(Rule 205)

	$default	reduce using rule 205 (HashDereference)

State 302:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 117)

	';'	shift, and go to state 336

State 303:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';' .	(Rule 112)

	$default	reduce using rule 112 (OperatorVoid)

State 304:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';' .	(Rule 113)

	$default	reduce using rule 113 (OperatorVoid)

State 305:

	ArrayDereference -> '@{' OPTIONAL-47 ArrayReference '}' .	(Rule 190)

	$default	reduce using rule 190 (ArrayDereference)

State 306:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 103)

	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	VARIABLE_SYMBOL	shift, and go to state 72

	VariableOrLiteral	go to state 337
	Variable	go to state 261
	Literal	go to state 260

State 307:

	OPTIONAL-48 -> TypeInner .	(Rule 191)

	$default	reduce using rule 191 (OPTIONAL-48)

State 308:

	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-48 . SubExpression	(Rule 193)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	SubExpression	go to state 338
	HashDereference	go to state 105
	Literal	go to state 104
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	ArrayReference	go to state 100

State 309:

	PAREN-49 -> OP21_LIST_COMMA . HashEntry	(Rule 197)

	'%{'	shift, and go to state 87
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 194

	Variable	go to state 196
	VariableOrLiteralOrWord	go to state 191
	HashEntry	go to state 339
	Literal	go to state 192
	HashDereference	go to state 193

State 310:

	HashReference -> LBRACE HashEntry STAR-50 '}' .	(Rule 200)

	$default	reduce using rule 200 (HashReference)

State 311:

	STAR-50 -> STAR-50 PAREN-49 .	(Rule 198)

	$default	reduce using rule 198 (STAR-50)

State 312:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	OP21_LIST_COMMA	shift, and go to state 340

State 313:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';' .	(Rule 170)

	$default	reduce using rule 170 (VariableDeclaration)

State 314:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 171)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	STDIN	shift, and go to state 234
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	WordScoped	go to state 110
	Variable	go to state 137
	ArrayDereference	go to state 98
	ArrayReference	go to state 100
	Operator	go to state 80
	SubExpressionOrStdin	go to state 341
	Expression	go to state 133
	SubExpression	go to state 236
	Literal	go to state 104
	HashDereference	go to state 105
	HashReference	go to state 82

State 315:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';' .	(Rule 172)

	$default	reduce using rule 172 (VariableDeclaration)

State 316:

	Expression -> WordScoped LPAREN OPTIONAL-33 ')' .	(Rule 125)

	$default	reduce using rule 125 (Expression)

State 317:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 80)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	ListElements	go to state 342
	ArrayReference	go to state 100
	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137
	TypeInner	go to state 141
	Literal	go to state 104
	SubExpression	go to state 140
	HashDereference	go to state 105
	HashReference	go to state 82
	Operator	go to state 80
	ListElement	go to state 143
	Expression	go to state 133

State 318:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ')'	(Rule 78)

	')'	shift, and go to state 343

State 319:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 344

State 320:

	STAR-17 -> STAR-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (STAR-17)

State 321:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 345

State 322:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 212)

	OP19_VARIABLE_ASSIGN	shift, and go to state 346

State 323:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 64)

	LBRACE	shift, and go to state 347

State 324:

	STAR-23 -> STAR-23 . MethodOrSubroutine	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 . LITERAL_NUMBER ';'	(Rule 59)

	'our'	shift, and go to state 351
	LITERAL_NUMBER	shift, and go to state 348

	MethodOrSubroutine	go to state 349
	Subroutine	go to state 352
	Method	go to state 350

State 325:

	LoopWhile -> 'while' LPAREN SubExpression ')' . CodeBlock	(Rule 160)

	LBRACE	shift, and go to state 334

	CodeBlock	go to state 353

State 326:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 159)

	LPAREN	shift, and go to state 354

State 327:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 158)

	LPAREN	shift, and go to state 355

State 328:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 168)

	$default	reduce using rule 168 (VariableRetrieval)

State 329:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 169)

	$default	reduce using rule 169 (VariableRetrieval)

State 330:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 167)

	$default	reduce using rule 167 (VariableRetrieval)

State 331:

	TypeInner -> MY Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 211)

	OP19_VARIABLE_ASSIGN	shift, and go to state 356

State 332:

	PAREN-43 -> OP21_LIST_COMMA ListElement .	(Rule 175)

	$default	reduce using rule 175 (PAREN-43)

State 333:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock . STAR-38 OPTIONAL-40	(Rule 154)

	$default	reduce using rule 150 (STAR-38)

	STAR-38	go to state 357

State 334:

	CodeBlock -> LBRACE . PLUS-41 '}'	(Rule 163)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'if'	shift, and go to state 78
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 109
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 74
	OP01_NAMED_VOID_LPAREN	shift, and go to state 76
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP19_LOOP_CONTROL	shift, and go to state 94
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 90

	'for'	reduce using rule 142 (OPTIONAL-36)
	'foreach'	reduce using rule 142 (OPTIONAL-36)
	'while'	reduce using rule 142 (OPTIONAL-36)

	OPTIONAL-36	go to state 71
	Expression	go to state 93
	PLUS-41	go to state 359
	ArrayReference	go to state 100
	ArrayDereference	go to state 98
	Statement	go to state 103
	SubExpression	go to state 106
	Literal	go to state 104
	HashDereference	go to state 105
	HashReference	go to state 82
	Operator	go to state 80
	LoopLabel	go to state 81
	VariableDeclaration	go to state 86
	OperatorVoid	go to state 114
	PAREN-35	go to state 115
	Operation	go to state 358
	VariableModification	go to state 83
	WordScoped	go to state 110
	Conditional	go to state 84
	Variable	go to state 85

State 335:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-34 ')' .	(Rule 127)

	$default	reduce using rule 127 (Expression)

State 336:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 117)

	$default	reduce using rule 117 (OperatorVoid)

State 337:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 338:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	HashEntry -> VariableOrLiteralOrWord OP20_HASH_FATARROW OPTIONAL-48 SubExpression .	(Rule 193)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

	'}'	reduce using rule 193 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 193 (HashEntry)

State 339:

	PAREN-49 -> OP21_LIST_COMMA HashEntry .	(Rule 197)

	$default	reduce using rule 197 (PAREN-49)

State 340:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	LITERAL_STRING	shift, and go to state 360

State 341:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 171)

	';'	shift, and go to state 361

State 342:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 80)

	')'	shift, and go to state 362

State 343:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')' .	(Rule 78)

	$default	reduce using rule 78 (Operator)

State 344:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 365
	OP21_LIST_COMMA	shift, and go to state 364

	PAREN-18	go to state 363

State 345:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 346:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 212)

	$default	reduce using rule 212 (TypeInnerConstant)

State 347:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 64)

	'%{'	shift, and go to state 87
	'}'	shift, and go to state 366
	WORD	shift, and go to state 367

	HashDereference	go to state 369
	HashEntryTyped	go to state 368

State 348:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER . ';'	(Rule 59)

	';'	shift, and go to state 370

State 349:

	STAR-23 -> STAR-23 MethodOrSubroutine .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 350:

	MethodOrSubroutine -> Method .	(Rule 74)

	$default	reduce using rule 74 (MethodOrSubroutine)

State 351:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 STAR-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 STAR-27 '}' ';'	(Rule 69)

	TYPE_INTEGER	shift, and go to state 54
	TYPE_METHOD	shift, and go to state 371
	WORD	shift, and go to state 53

	Type	go to state 55

State 352:

	MethodOrSubroutine -> Subroutine .	(Rule 75)

	$default	reduce using rule 75 (MethodOrSubroutine)

State 353:

	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock .	(Rule 160)

	$default	reduce using rule 160 (LoopWhile)

State 354:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 159)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 139
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 138
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	ListElement	go to state 143
	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	TypeInner	go to state 141
	HashDereference	go to state 105
	SubExpression	go to state 140
	Literal	go to state 104
	ArrayDereference	go to state 98
	Variable	go to state 137
	WordScoped	go to state 110
	ArrayReference	go to state 100
	ListElements	go to state 372

State 355:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 158)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	SubExpression	go to state 373
	Literal	go to state 104
	HashDereference	go to state 105
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	ArrayReference	go to state 100

State 356:

	TypeInner -> MY Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 211)

	$default	reduce using rule 211 (TypeInner)

State 357:

	STAR-38 -> STAR-38 . PAREN-37	(Rule 149)
	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-38 . OPTIONAL-40	(Rule 154)

	'else'	shift, and go to state 374
	'elsif'	shift, and go to state 377

	$end	reduce using rule 153 (OPTIONAL-40)
	'%{'	reduce using rule 153 (OPTIONAL-40)
	'@{'	reduce using rule 153 (OPTIONAL-40)
	'for'	reduce using rule 153 (OPTIONAL-40)
	'foreach'	reduce using rule 153 (OPTIONAL-40)
	'if'	reduce using rule 153 (OPTIONAL-40)
	'undef'	reduce using rule 153 (OPTIONAL-40)
	'while'	reduce using rule 153 (OPTIONAL-40)
	'}'	reduce using rule 153 (OPTIONAL-40)
	LBRACE	reduce using rule 153 (OPTIONAL-40)
	LBRACKET	reduce using rule 153 (OPTIONAL-40)
	LITERAL_NUMBER	reduce using rule 153 (OPTIONAL-40)
	LITERAL_STRING	reduce using rule 153 (OPTIONAL-40)
	LPAREN	reduce using rule 153 (OPTIONAL-40)
	MY	reduce using rule 153 (OPTIONAL-40)
	OP01_CLOSE	reduce using rule 153 (OPTIONAL-40)
	OP01_NAMED	reduce using rule 153 (OPTIONAL-40)
	OP01_NAMED_VOID	reduce using rule 153 (OPTIONAL-40)
	OP01_NAMED_VOID_LPAREN	reduce using rule 153 (OPTIONAL-40)
	OP01_NAMED_VOID_SCOLON	reduce using rule 153 (OPTIONAL-40)
	OP01_OPEN	reduce using rule 153 (OPTIONAL-40)
	OP01_PRINT	reduce using rule 153 (OPTIONAL-40)
	OP03_MATH_INC_DEC	reduce using rule 153 (OPTIONAL-40)
	OP05_LOGICAL_NEG	reduce using rule 153 (OPTIONAL-40)
	OP05_MATH_NEG_LPAREN	reduce using rule 153 (OPTIONAL-40)
	OP10_NAMED_UNARY	reduce using rule 153 (OPTIONAL-40)
	OP19_LOOP_CONTROL	reduce using rule 153 (OPTIONAL-40)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 153 (OPTIONAL-40)
	OP22_LOGICAL_NEG	reduce using rule 153 (OPTIONAL-40)
	VARIABLE_SYMBOL	reduce using rule 153 (OPTIONAL-40)
	WORD	reduce using rule 153 (OPTIONAL-40)
	WORD_SCOPED	reduce using rule 153 (OPTIONAL-40)
	WORD_UPPERCASE	reduce using rule 153 (OPTIONAL-40)

	PAREN-37	go to state 376
	PAREN-39	go to state 378
	OPTIONAL-40	go to state 375

State 358:

	PLUS-41 -> Operation .	(Rule 162)

	$default	reduce using rule 162 (PLUS-41)

State 359:

	PLUS-41 -> PLUS-41 . Operation	(Rule 161)
	CodeBlock -> LBRACE PLUS-41 . '}'	(Rule 163)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'if'	shift, and go to state 78
	'undef'	shift, and go to state 116
	'}'	shift, and go to state 380
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 109
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 74
	OP01_NAMED_VOID_LPAREN	shift, and go to state 76
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP19_LOOP_CONTROL	shift, and go to state 94
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 90

	'for'	reduce using rule 142 (OPTIONAL-36)
	'foreach'	reduce using rule 142 (OPTIONAL-36)
	'while'	reduce using rule 142 (OPTIONAL-36)

	Conditional	go to state 84
	Operation	go to state 379
	WordScoped	go to state 110
	VariableModification	go to state 83
	Variable	go to state 85
	PAREN-35	go to state 115
	VariableDeclaration	go to state 86
	OperatorVoid	go to state 114
	Operator	go to state 80
	LoopLabel	go to state 81
	SubExpression	go to state 106
	HashDereference	go to state 105
	Literal	go to state 104
	Statement	go to state 103
	HashReference	go to state 82
	ArrayDereference	go to state 98
	ArrayReference	go to state 100
	Expression	go to state 93
	OPTIONAL-36	go to state 71

State 360:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 81)

	OP21_LIST_COMMA	shift, and go to state 381

State 361:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 171)

	$default	reduce using rule 171 (VariableDeclaration)

State 362:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 80)

	$default	reduce using rule 80 (Operator)

State 363:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 364:

	PAREN-18 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 47)

	MY	shift, and go to state 382

State 365:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 383

State 366:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 64)

	';'	shift, and go to state 384

State 367:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 195)

	OP20_HASH_FATARROW	shift, and go to state 385

State 368:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped . STAR-25 '}' ';'	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 386

State 369:

	HashEntryTyped -> HashDereference .	(Rule 196)

	$default	reduce using rule 196 (HashEntryTyped)

State 370:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';' .	(Rule 59)

	$default	reduce using rule 59 (Class)

State 371:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-26 STAR-27 '}' ';'	(Rule 69)

	VARIABLE_SYMBOL	shift, and go to state 387

State 372:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 159)

	')'	shift, and go to state 388

State 373:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 158)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 389
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

State 374:

	PAREN-39 -> 'else' . CodeBlock	(Rule 151)

	LBRACE	shift, and go to state 334

	CodeBlock	go to state 390

State 375:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-38 OPTIONAL-40 .	(Rule 154)

	$default	reduce using rule 154 (Conditional)

State 376:

	STAR-38 -> STAR-38 PAREN-37 .	(Rule 149)

	$default	reduce using rule 149 (STAR-38)

State 377:

	PAREN-37 -> 'elsif' . LPAREN SubExpression ')' CodeBlock	(Rule 148)

	LPAREN	shift, and go to state 391

State 378:

	OPTIONAL-40 -> PAREN-39 .	(Rule 152)

	$default	reduce using rule 152 (OPTIONAL-40)

State 379:

	PLUS-41 -> PLUS-41 Operation .	(Rule 161)

	$default	reduce using rule 161 (PLUS-41)

State 380:

	CodeBlock -> LBRACE PLUS-41 '}' .	(Rule 163)

	$default	reduce using rule 163 (CodeBlock)

State 381:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 81)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	ArrayReference	go to state 100
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	HashReference	go to state 82
	HashDereference	go to state 105
	Literal	go to state 104
	SubExpression	go to state 392
	Expression	go to state 133
	Operator	go to state 80

State 382:

	PAREN-18 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 47)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53

	Type	go to state 393

State 383:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 394

State 384:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 64)

	$default	reduce using rule 64 (Properties)

State 385:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 195)

	MY	shift, and go to state 139

	TypeInner	go to state 395

State 386:

	STAR-25 -> STAR-25 . PAREN-24	(Rule 61)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 . '}' ';'	(Rule 63)

	'}'	shift, and go to state 397
	OP21_LIST_COMMA	shift, and go to state 398

	PAREN-24	go to state 396

State 387:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-26 STAR-27 '}' ';'	(Rule 69)

	'= sub {'	shift, and go to state 399

State 388:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 159)

	LBRACE	shift, and go to state 334

	CodeBlock	go to state 400

State 389:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 102)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 158)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Expression	go to state 133
	Operator	go to state 80
	HashReference	go to state 82
	Literal	go to state 104
	SubExpression	go to state 401
	HashDereference	go to state 105
	Variable	go to state 137
	ArrayDereference	go to state 98
	WordScoped	go to state 110
	ArrayReference	go to state 100

State 390:

	PAREN-39 -> 'else' CodeBlock .	(Rule 151)

	$default	reduce using rule 151 (PAREN-39)

State 391:

	PAREN-37 -> 'elsif' LPAREN . SubExpression ')' CodeBlock	(Rule 148)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	Operator	go to state 80
	Expression	go to state 133
	Literal	go to state 104
	SubExpression	go to state 402
	HashDereference	go to state 105
	HashReference	go to state 82
	WordScoped	go to state 110
	Variable	go to state 137
	ArrayDereference	go to state 98
	ArrayReference	go to state 100

State 392:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 81)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187

	')'	reduce using rule 81 (Operator)
	';'	reduce using rule 81 (Operator)
	']'	reduce using rule 81 (Operator)
	'}'	reduce using rule 81 (Operator)
	OP21_LIST_COMMA	reduce using rule 81 (Operator)
	OP23_LOGICAL_AND	reduce using rule 81 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 81 (Operator)

State 393:

	PAREN-18 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 403

State 394:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 395:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 195)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'undef'	shift, and go to state 116
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 136

	HashDereference	go to state 105
	Literal	go to state 104
	SubExpression	go to state 404
	HashReference	go to state 82
	Operator	go to state 80
	Expression	go to state 133
	ArrayReference	go to state 100
	WordScoped	go to state 110
	ArrayDereference	go to state 98
	Variable	go to state 137

State 396:

	STAR-25 -> STAR-25 PAREN-24 .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 397:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' . ';'	(Rule 63)

	';'	shift, and go to state 405

State 398:

	PAREN-24 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 60)

	'%{'	shift, and go to state 87
	WORD	shift, and go to state 367

	HashEntryTyped	go to state 406
	HashDereference	go to state 369

State 399:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-26 STAR-27 '}' ';'	(Rule 69)

	LPAREN_MY	shift, and go to state 407

	'%{'	reduce using rule 66 (OPTIONAL-26)
	'@{'	reduce using rule 66 (OPTIONAL-26)
	'for'	reduce using rule 66 (OPTIONAL-26)
	'foreach'	reduce using rule 66 (OPTIONAL-26)
	'if'	reduce using rule 66 (OPTIONAL-26)
	'undef'	reduce using rule 66 (OPTIONAL-26)
	'while'	reduce using rule 66 (OPTIONAL-26)
	'}'	reduce using rule 66 (OPTIONAL-26)
	LBRACE	reduce using rule 66 (OPTIONAL-26)
	LBRACKET	reduce using rule 66 (OPTIONAL-26)
	LITERAL_NUMBER	reduce using rule 66 (OPTIONAL-26)
	LITERAL_STRING	reduce using rule 66 (OPTIONAL-26)
	LPAREN	reduce using rule 66 (OPTIONAL-26)
	MY	reduce using rule 66 (OPTIONAL-26)
	OP01_CLOSE	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID_LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP01_OPEN	reduce using rule 66 (OPTIONAL-26)
	OP01_PRINT	reduce using rule 66 (OPTIONAL-26)
	OP03_MATH_INC_DEC	reduce using rule 66 (OPTIONAL-26)
	OP05_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	OP05_MATH_NEG_LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP10_NAMED_UNARY	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP22_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	VARIABLE_SYMBOL	reduce using rule 66 (OPTIONAL-26)
	WORD	reduce using rule 66 (OPTIONAL-26)
	WORD_SCOPED	reduce using rule 66 (OPTIONAL-26)
	WORD_UPPERCASE	reduce using rule 66 (OPTIONAL-26)

	MethodArguments	go to state 408
	OPTIONAL-26	go to state 409

State 400:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 159)

	$default	reduce using rule 159 (LoopForEach)

State 401:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 158)

	')'	shift, and go to state 410
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 402:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	PAREN-37 -> 'elsif' LPAREN SubExpression . ')' CodeBlock	(Rule 148)

	')'	shift, and go to state 411
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

State 403:

	PAREN-18 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 404:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 195)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 189
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 188
	OP07_STRING_REPEAT	shift, and go to state 178
	OP08_MATH_ADD_SUB	shift, and go to state 174
	OP08_STRING_CAT	shift, and go to state 182
	OP09_BITWISE_SHIFT	shift, and go to state 177
	OP11_COMPARE_LT_GT	shift, and go to state 190
	OP12_COMPARE_EQ_NE	shift, and go to state 183
	OP13_BITWISE_AND	shift, and go to state 179
	OP14_BITWISE_OR_XOR	shift, and go to state 176
	OP15_LOGICAL_AND	shift, and go to state 180
	OP16_LOGICAL_OR	shift, and go to state 175
	OP17_LIST_RANGE	shift, and go to state 184
	OP18_TERNARY	shift, and go to state 187
	OP23_LOGICAL_AND	shift, and go to state 186
	OP24_LOGICAL_OR_XOR	shift, and go to state 181

	'}'	reduce using rule 195 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 195 (HashEntryTyped)

State 405:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';' .	(Rule 63)

	$default	reduce using rule 63 (Properties)

State 406:

	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 60)

	$default	reduce using rule 60 (PAREN-24)

State 407:

	MethodArguments -> LPAREN_MY . TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	TYPE_SELF	shift, and go to state 412

State 408:

	OPTIONAL-26 -> MethodArguments .	(Rule 65)

	$default	reduce using rule 65 (OPTIONAL-26)

State 409:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 . STAR-27 '}' ';'	(Rule 69)

	$default	reduce using rule 68 (STAR-27)

	STAR-27	go to state 413

State 410:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 158)

	LBRACE	shift, and go to state 334

	CodeBlock	go to state 414

State 411:

	PAREN-37 -> 'elsif' LPAREN SubExpression ')' . CodeBlock	(Rule 148)

	LBRACE	shift, and go to state 334

	CodeBlock	go to state 415

State 412:

	MethodArguments -> LPAREN_MY TYPE_SELF . STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	$default	reduce using rule 72 (STAR-29)

	STAR-29	go to state 416

State 413:

	STAR-27 -> STAR-27 . Operation	(Rule 67)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 STAR-27 . '}' ';'	(Rule 69)

	'%{'	shift, and go to state 87
	'@{'	shift, and go to state 102
	'if'	shift, and go to state 78
	'undef'	shift, and go to state 116
	'}'	shift, and go to state 418
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 75
	LITERAL_NUMBER	shift, and go to state 99
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 113
	MY	shift, and go to state 109
	OP01_CLOSE	shift, and go to state 91
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 74
	OP01_NAMED_VOID_LPAREN	shift, and go to state 76
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 97
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 111
	OP05_MATH_NEG_LPAREN	shift, and go to state 73
	OP10_NAMED_UNARY	shift, and go to state 117
	OP19_LOOP_CONTROL	shift, and go to state 94
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 88
	OP22_LOGICAL_NEG	shift, and go to state 92
	VARIABLE_SYMBOL	shift, and go to state 72
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 90

	'for'	reduce using rule 142 (OPTIONAL-36)
	'foreach'	reduce using rule 142 (OPTIONAL-36)
	'while'	reduce using rule 142 (OPTIONAL-36)

	OPTIONAL-36	go to state 71
	Expression	go to state 93
	ArrayReference	go to state 100
	ArrayDereference	go to state 98
	Statement	go to state 103
	HashDereference	go to state 105
	Literal	go to state 104
	SubExpression	go to state 106
	HashReference	go to state 82
	Operator	go to state 80
	LoopLabel	go to state 81
	VariableDeclaration	go to state 86
	OperatorVoid	go to state 114
	PAREN-35	go to state 115
	Operation	go to state 417
	WordScoped	go to state 110
	VariableModification	go to state 83
	Conditional	go to state 84
	Variable	go to state 85

State 414:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 158)

	$default	reduce using rule 158 (LoopFor)

State 415:

	PAREN-37 -> 'elsif' LPAREN SubExpression ')' CodeBlock .	(Rule 148)

	$default	reduce using rule 148 (PAREN-37)

State 416:

	STAR-29 -> STAR-29 . PAREN-28	(Rule 71)
	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	')'	shift, and go to state 419
	OP21_LIST_COMMA	shift, and go to state 420

	PAREN-28	go to state 421

State 417:

	STAR-27 -> STAR-27 Operation .	(Rule 67)

	$default	reduce using rule 67 (STAR-27)

State 418:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 STAR-27 '}' . ';'	(Rule 69)

	';'	shift, and go to state 422

State 419:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	OP19_VARIABLE_ASSIGN	shift, and go to state 423

State 420:

	PAREN-28 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 70)

	MY	shift, and go to state 424

State 421:

	STAR-29 -> STAR-29 PAREN-28 .	(Rule 71)

	$default	reduce using rule 71 (STAR-29)

State 422:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 STAR-27 '}' ';' .	(Rule 69)

	$default	reduce using rule 69 (Method)

State 423:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 73)

	'@_;'	shift, and go to state 425

State 424:

	PAREN-28 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 70)

	TYPE_INTEGER	shift, and go to state 54
	WORD	shift, and go to state 53

	Type	go to state 426

State 425:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 73)

	$default	reduce using rule 73 (MethodArguments)

State 426:

	PAREN-28 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 70)

	VARIABLE_SYMBOL	shift, and go to state 427

State 427:

	PAREN-28 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 70)

	$default	reduce using rule 70 (PAREN-28)


Summary:
--------
Number of rules         : 220
Number of terminals     : 90
Number of non-terminals : 101
Number of states        : 428
